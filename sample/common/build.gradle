plugins {
  alias(libs.plugins.kotlin.multiplatform)
  alias(libs.plugins.kotlin.native.cocoapods)
  id("app.cash.sqldelight")
}

archivesBaseName = 'sample-common'

sqldelight {
  databases {
    HockeyDb {
      packageName = "com.example.sqldelight.hockey"
    }
  }
  linkSqlite = true
}

version = 1.0

kotlin {
  jvmToolchain(8)

  // Configure common.
  sourceSets.commonMain.dependencies {
    implementation 'app.cash.sqldelight:primitive-adapters'
    api "org.jetbrains.kotlinx:kotlinx-datetime:0.5.0"
  }
  sourceSets.commonTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test'
    implementation libs.kotlin.coroutines.test
  }

  // Configure jvm.
  jvm()
  sourceSets.jvmTest.dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-test-junit'
    implementation "app.cash.sqldelight:sqlite-driver"
  }

  // Configure iOS.
  def sdkName = System.getenv("SDK_NAME")
  if (sdkName != null && sdkName.startsWith("iphoneos")) {
    iosArm64("ios")
  } else {
    iosX64("ios")
  }
  sourceSets.iosMain.dependencies {
    implementation "app.cash.sqldelight:native-driver"
  }

  cocoapods {
    summary = "Common core for SQLDelight sample."
    homepage = "https://github.com/cashapp/sqldelight/tree/master/sample/common"
  }
}

// https://youtrack.jetbrains.com/issue/KT-55751
configurations {
  def myAttribute = Attribute.of("dummy.attribute", String)

  podDebugFrameworkIos { attributes.attribute(myAttribute, "dummy-value") }
  podReleaseFrameworkIos { attributes.attribute(myAttribute, "dummy-value") }
}
